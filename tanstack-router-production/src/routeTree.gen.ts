/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedAboutImport } from './routes/_authenticated/about'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users.index'
import { Route as AuthenticatedUsersUserIdImport } from './routes/_authenticated/users.$userId'
import { Route as AuthenticatedAppSettingsImport } from './routes/_authenticated/app/settings'
import { Route as AuthenticatedAppChatIdChatImport } from './routes/_authenticated/app/$chatId.chat'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAboutRoute = AuthenticatedAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedUsersUserIdRoute = AuthenticatedUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAppSettingsRoute = AuthenticatedAppSettingsImport.update({
  id: '/app/settings',
  path: '/app/settings',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAppChatIdChatRoute = AuthenticatedAppChatIdChatImport.update(
  {
    id: '/app/$chatId/chat',
    path: '/app/$chatId/chat',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about': {
      id: '/_authenticated/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/app/settings': {
      id: '/_authenticated/app/settings'
      path: '/app/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AuthenticatedAppSettingsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/app/$chatId/chat': {
      id: '/_authenticated/app/$chatId/chat'
      path: '/app/$chatId/chat'
      fullPath: '/app/$chatId/chat'
      preLoaderRoute: typeof AuthenticatedAppChatIdChatImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAboutRoute: typeof AuthenticatedAboutRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAppSettingsRoute: typeof AuthenticatedAppSettingsRoute
  AuthenticatedUsersUserIdRoute: typeof AuthenticatedUsersUserIdRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
  AuthenticatedAppChatIdChatRoute: typeof AuthenticatedAppChatIdChatRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAboutRoute: AuthenticatedAboutRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAppSettingsRoute: AuthenticatedAppSettingsRoute,
  AuthenticatedUsersUserIdRoute: AuthenticatedUsersUserIdRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  AuthenticatedAppChatIdChatRoute: AuthenticatedAppChatIdChatRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/about': typeof AuthenticatedAboutRoute
  '/': typeof AuthenticatedIndexRoute
  '/app/settings': typeof AuthenticatedAppSettingsRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/app/$chatId/chat': typeof AuthenticatedAppChatIdChatRoute
}

export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/about': typeof AuthenticatedAboutRoute
  '/': typeof AuthenticatedIndexRoute
  '/app/settings': typeof AuthenticatedAppSettingsRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/app/$chatId/chat': typeof AuthenticatedAppChatIdChatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_authenticated/about': typeof AuthenticatedAboutRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/app/settings': typeof AuthenticatedAppSettingsRoute
  '/_authenticated/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/app/$chatId/chat': typeof AuthenticatedAppChatIdChatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/about'
    | '/'
    | '/app/settings'
    | '/users/$userId'
    | '/users'
    | '/app/$chatId/chat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/about'
    | '/'
    | '/app/settings'
    | '/users/$userId'
    | '/users'
    | '/app/$chatId/chat'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_auth/login'
    | '/_authenticated/about'
    | '/_authenticated/'
    | '/_authenticated/app/settings'
    | '/_authenticated/users/$userId'
    | '/_authenticated/users/'
    | '/_authenticated/app/$chatId/chat'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_auth/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/about",
        "/_authenticated/",
        "/_authenticated/app/settings",
        "/_authenticated/users/$userId",
        "/_authenticated/users/",
        "/_authenticated/app/$chatId/chat"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_authenticated/about": {
      "filePath": "_authenticated/about.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/app/settings": {
      "filePath": "_authenticated/app/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/$userId": {
      "filePath": "_authenticated/users.$userId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users.index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/app/$chatId/chat": {
      "filePath": "_authenticated/app/$chatId.chat.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
